load-env
  |> enable-cdn
      cloudflare
      fastly
  |> env -> connect-database
      url: env.database.url
      pool-size: 10
  |> db -> build-container
    player: PlayerRepository::from(db)
    logger: Logger::from(db)
    score: ScoreRepository::from(db)
  |> env -> auto-injection
    server
      port: env.server.port
    cron
  |> !



root (
  killer:
    cause: catch-abort-signal-by-os
    trigger: Console
)
  |> root -> console (
    killer:
      catch-abort-signal-by-user = Console (get ctrl with Keys::D)
  )
  |> app
    // 処理
  |> !


# Diff<A, R> (prev: T, next: T) -> R

# Mutator<T>(
  will: Diff<T, Unit>
  did: Diff<T, Unit>
  should: Diff<T, Bool>
)

new<Mutator<u8>>(10)
  |> (hit-point) ->
    subscribe(hit-point) |> did (prev, next) -> render-to-ui(prev, next)!
    attack(from: enemy, to: hit-point)!

# CreateUserInput
  name: String
  birthday: Date
# CreateUser(input: Input) -> Unit
create-user: CreateUser = (input) ->
  load-env
    |> connect-database
    |> create-user-repository with (create-user)
    |> fork(if)
    |> down(is-adult(user.birthday)) ->
        create-user(input)
          |> a -> if
            a is Yes: up(created(a.id)!)!
            a is No: up(error-occurred(a.cause)!)!
    |> down(otherwise) ->
        fork(if)
          |> down(is-owner(user)) ->
            accept(user)
              |> create-user(user)
              |> a -> if
                a is Yes: up(created(a.id)!)!
                a is No: up(error-occurred(a.cause)!)!
              |> up
              |> !
            |> down(otherwise)
              |> up(error-occurred('young')!)!
    |> union(r) ->
      r is Created: -> todo!
      r is ErrorOccurred: -> todo!
      r is Created: -> todo!
    |> !


main = fork
  a |> b |> await |> !
sub = fork
  c |> d |> await |> !

winner = race main, sub

main = fork
  inner = fork
    x = a |> b |> !
    y = c |> d |> !
    if n > 10: <- None
    join x, y
      |> merge |> !